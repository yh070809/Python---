> set server:name "fido"
OK
> get server:name
"fido"


Other common operations provided by key-value stores are DEL to delete a given key and associated value, SET-if-not-exists (called SETNX on Redis) that sets a key only if it does not already exist, and INCR to atomically increment a number stored at a given key:


    SET connections 10
    INCR connections => 11
    INCR connections => 12
    DEL connections
    INCR connections => 1
> set connections 10;
OK
> del connections
(integer) 1
> incr connections
(integer) 1
> incr connections
(integer) 2
> get connections
"2"


> set rescources:lock "redis demo"
OK
> expire rescources: lock 60
> ttl rescources:lock
(integer) -1



> rpush friends "Alice"
(integer) 1
> lpush friends "bob"
(integer) 2
> get friends

> get friends
(error) WRONGTYPE Operation against a key holding the wrong kind of value


> lrange friends 0 1
1) "bob"
2) "Alice"

check list length
> llen friends
(integer) 2
> rpop friends
"Alice"
> lpop friends
"bob"
> llen friends
(integer) 0



A set is similar to a list, except it does not have a specific order and each element may only appear once.
> sadd superpowers "flight"
(integer) 1
> sadd superpowers "x-ray vision"
(integer) 1
> sadd superpowers "reflexes"
(integer) 1

SMEMBERS returns a list of all the members of this set.

> smembers superpowers
1) "flight"
2) "x-ray vision"
3) "reflexes"

SISMEMBER tests if the given value is in the set. It returns 1 if the value is there and 0 if it is not.
> sismember superpowers "flight"
(integer) 1
> sismember superpowers "hah"
(integer) 0


SREM delete a memeber
> srem superpowers "reflexes"
1
> smembers superpowers
1) "flight"
2) "x-ray vision"


SUNION combines two or more sets and returns the list of all elements.

> sunion superpowers birdpowers
1) "flight"
2) "pecking"
3) "x-ray vision"


































